[tool.poetry]
name = "sqlalchemy-helpers"
version = "0.10.0"
description = "SQLAlchemy Helpers"

license = "LGPL-3.0-or-later"

authors = [
  "Fedora Infrastructure <admin@fedoraproject.org>"
]

readme = "README.md"
keywords = ["database", "web", "fedora"]
repository = "http://github.com/fedora-infra/sqlalchemy-helpers"
homepage = "http://github.com/fedora-infra/sqlalchemy-helpers"

include = [
    "tox.ini",
    "docs/*",
    "docs/*/*",
    "tests/*",
    "tests/*/*",
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Database",
]

[tool.poetry.dependencies]
python = "^3.7.0"
SQLAlchemy = ">=1.3.0"
alembic = ">=1.6.5"
Flask = { version = "^2.0.0", optional = true }
sphinx = {version = "*", optional = true}
myst-parser = {version = "*", optional = true}
sphinxcontrib-napoleon = {version = "*", optional = true}

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
bandit = "*"
black = "*"
flake8 = "*"
isort = "*"
coverage = {extras = ["toml"], version = "*"}
liccheck = "*"
sphinx = "*"
pre-commit = "*"
myst-parser = "*"
towncrier = "*"

[tool.poetry.extras]
flask = ["Flask"]
docs = ["sphinx", "myst-parser", "Flask", "sphinxcontrib-napoleon"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
target-version = ["py37"]

[tool.ruff]
select = ["E", "F", "W", "I", "UP", "S", "B", "RUF"]
line-length = 100
target-version = "py310"
ignore = ["RUF010", "UP038"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
"tests/integration/*" = ["S603"]
"news/get-authors.py" = ["S602", "S603", "S607"]
"docs/conf.py" = ["I001"]
"sqlalchemy_helpers/__init__.py" = ["F401"]

[tool.ruff.isort]
lines-after-imports = 2
order-by-type = false

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["sqlalchemy_helpers"]

[tool.coverage.paths]
source = ["sqlalchemy_helpers"]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
]
omit = [
    "sqlalchemy_helpers/__init__.py",
    "sqlalchemy_helpers/migrations/env.py",
]


[tool.towncrier]
package = "sqlalchemy_helpers"
filename = "docs/release_notes.rst"
directory = "news/"
title_format = "v{version}"
issue_format = "{issue}"
template = "news/_template.rst"
underlines = "=^-"
wrap = true
all_bullets = true

  [[tool.towncrier.type]]
  directory = "bic"
  name = "Backwards Incompatible Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "dependency"
  name = "Dependency Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "feature"
  name = "Features"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "bug"
  name = "Bug Fixes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "dev"
  name = "Development Improvements"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "docs"
  name = "Documentation Improvements"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "other"
  name = "Other Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "author"
  name = "Contributors"
  showcontent = true
